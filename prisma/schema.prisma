generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Setup {
  step String @id
}

model KanjidicEntry {
  id          String   @id
  onReadings  String[]
  kunReadings String[]
  tag         String?
  definitions String[]
  meta        Json?
}

model Unihan15 {
  id           String   @id
  kCantonese   String[]
  kDefinition  String[]
  kHangul      String[]
  kHanyuPinlu  String[]
  kHanyuPinyin String[]
  kJapaneseKun String[]
  kJapaneseOn  String[]
  kKorean      String[]
  kMandarin    String[]
  kTang        String[]
  kTGHZ2013    String[]
  kVietnamese  String[]
  kXHC1983     String[]
}

model Unihan12 {
  id        String   @id
  kZVariant String[]
}

model Unihan14 {
  id                          String   @id
  kSemanticVariant            String[]
  kSimplifiedVariant          String[]
  kSpecializedSemanticVariant String[]
  kTraditionalVariant         String[]
  kZVariant                   String[]
}

model KanjiDbComposition {
  id            String  @id
  ids           String?
  etymology     String?
  sbgySyllables Int[]
}

model KanjiDbSbgyNote {
  character String
  syllable  Int
  text      String

  @@id([character, syllable])
}

model KanjiDbVariant {
  variant     String
  base        String
  variantType KanjiDbVariantType

  @@id([variant, base, variantType])
}

model SbgyXiaoyun {
  xiaoyun        Int      @id
  exemplars      String[]
  fanqie         String
  initial        String
  cycleHead      String
  tone           String
  kaihe          String?
  note           String?
  dengOrChongniu String?
}

model ScriptinAozoraFrequency {
  character   String @id
  appearances Int
  fraction    Float
  rank        Int
}

model KanjisenseVariantGroup {
  id               String             @id
  variants         String[]
  // built after variants are set
  KanjisenseFigure KanjisenseFigure[]
}

model KanjisenseFigureRelation {
  id                    String            @id
  variantGroupId        String?
  directUses            String[]
  listsAsComponent      String[]
  isPriorityCandidate   Boolean
  idsText               String
  selectedIdsComponents String[]
  figure                KanjisenseFigure?
}

model KanjisenseSoundMarkChain {
  character String @id
  chain     Json
}

model KanjisenseFigure {
  id                   String                   @id
  keyword              String
  isPriority           Boolean
  listsAsComponent     String[]
  listsAsCharacter     String[]
  aozoraAppearances    Int
  activeSoundMark      KanjisenseComponent?     @relation("activeSoundMark", fields: [activeSoundMarkId], references: [id])
  activeSoundMarkId    String?
  activeSoundMarkValue String?
  variantGroupId       String?
  componentsTree       Json?
  shuowenImageId       String?
  kvgJsonId            String?
  mnemonicKeyword      String?
  asComponent          KanjisenseComponent?     @relation("asComponent")
  allComponents        KanjisenseComponent[]    @relation("allComponents")
  firstClassUses       KanjisenseComponentUse[] @relation("firstClassUses")
  firstClassComponents KanjisenseComponentUse[] @relation("firstClassComponents")

  relation     KanjisenseFigureRelation @relation(fields: [id], references: [id])
  KvgJson      KvgJson?                 @relation(fields: [kvgJsonId], references: [id])
  ShuowenImage ShuowenImage?            @relation(fields: [shuowenImageId], references: [id])
  variantGroup KanjisenseVariantGroup?  @relation(fields: [variantGroupId], references: [id])
  meaning      KanjisenseFigureMeaning?
}

model KanjisenseComponent {
  id              String             @id
  componentFigure KanjisenseFigure   @relation("asComponent", fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  allUses         KanjisenseFigure[] @relation("allComponents")

  soundMarkUses KanjisenseFigure[] @relation("activeSoundMark")
}

model KanjisenseComponentUse {
  componentId String
  parentId    String
  indexInTree Int?
  isSoundMark Boolean

  component KanjisenseFigure @relation("firstClassUses", fields: [componentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parent    KanjisenseFigure @relation("firstClassComponents", fields: [parentId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([componentId, parentId])
}

model KanjisenseFigureReading {
  id                        String  @id
  guangyunYunjing           String?
  guangyunInferredKanOn     String?
  guangyunInferredGoOn      String?
  kanjidicOn                String?
  kanjidicOnInJmDictIndexes String?
  kanjidicKun               String?
  unihanMandarin            String?
  kCantonese                String?
  kHangul                   String?
  kVietnamese               String?
  kJapaneseOn               String?
}

model KanjisenseFigureMeaning {
  id                   String           @id
  unihanDefinition     String?
  kanjisenseHistorical String?
  kanjisenseMnemonic   String?
  kanjisenseStandin    String?
  kanjisenseReference  String?
  kanjidicEnglish      String[]
  figure               KanjisenseFigure @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model KvgJson {
  id      String             @id
  json    Json
  figures KanjisenseFigure[]
}

model ShuowenImage {
  id      String             @id
  xml     String
  figures KanjisenseFigure[]
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  notes     Note[]
  password  Password?
}

model Password {
  hash   String
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Note {
  id        String   @id @default(cuid())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

enum KanjisenseComponentUseTag {
  directMeaningless
  directMeaninglessSound
  meaningfulIndirect
  meaningfulIndirectSound
  sound
}

enum KanjiDbVariantType {
  VariationSelectorVariant
  CjkviVariant
  OldStyle
  NewStyle
  Borrowed
  TwEduVariant
  HanyuDaCidianVariant
  HanyuDaCidianVariantReverse
}
