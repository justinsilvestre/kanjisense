generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ReadyTables {
  id String @id
}

model KanjidicEntry {
  id          String   @id
  onReadings  String[]
  kunReadings String[]
  tag         String?
  definitions String[]
  meta        Json?
}

model Unihan15 {
  id           String   @id
  kCantonese   String[]
  kDefinition  String[]
  kHangul      String[]
  kHanyuPinlu  String[]
  kHanyuPinyin String[]
  kJapaneseKun String[]
  kJapaneseOn  String[]
  kKorean      String[]
  kMandarin    String[]
  kTang        String[]
  kTGHZ2013    String[]
  kVietnamese  String[]
  kXHC1983     String[]
}

model Unihan12 {
  id        String   @id
  kZVariant String[]
}

model Unihan14 {
  id                          String   @id
  kSemanticVariant            String[]
  kSimplifiedVariant          String[]
  kSpecializedSemanticVariant String[]
  kTraditionalVariant         String[]
  kZVariant                   String[]
}

model KanjiDbComposition {
  id            String  @id
  ids           String?
  etymology     String?
  sbgySyllables Int[]
}

model KanjiDbSbgyNote {
  character String
  syllable  Int
  text      String

  @@id([character, syllable])
}

model KanjiDbVariant {
  variant     String
  base        String
  variantType KanjiDbVariantType

  @@id([variant, base, variantType])
}

model SbgyXiaoyun {
  xiaoyun        Int      @id
  exemplars      String[]
  fanqie         String
  initial        String
  cycleHead      String
  tone           String
  kaihe          String?
  note           String?
  dengOrChongniu String?
}

model ScriptinAozoraFrequency {
  character   String @id
  appearances Int
  fraction    Float
  rank        Int
}

model KanjisenseVariantGroup {
  id       String   @id
  variants String[]
}

model KanjisenseFigureRelation {
  id                  String   @id
  variantGroupId      String?
  idsText             String
  directUses          String[]
  listsAsComponent    String[]
  isPriorityCandidate Boolean
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  notes     Note[]
  password  Password?
}

model Password {
  hash   String
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Note {
  id        String   @id @default(cuid())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum KanjiDbVariantType {
  VariationSelectorVariant
  CjkviVariant
  OldStyle
  NewStyle
  Borrowed
  TwEduVariant
  HanyuDaCidianVariant
  HanyuDaCidianVariantReverse
}
